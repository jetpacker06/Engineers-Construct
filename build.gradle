buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: "${mixingradle_version}"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_version}-${mod_version}"
group = 'com.jetpacker06.econstruct'
archivesBaseName = 'econstruct'
java.toolchain.languageVersion = JavaLanguageVersion.of(17)


println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "parchment", version: "${mappings_version}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'econstruct'

            mods {
                econstruct {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'econstruct'
            mods {
                econstruct {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'econstruct'
            mods {
                econstruct {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'econstruct', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                econstruct {
                    source sourceSets.main
                }
            }
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()

    // JEI
    maven {
        // location of the maven that hosts JEI files before January 2023
        // Also Tinker's Construct maven
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }

    // Create, Flywheel, Registrate
    maven {
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }

    // Other mods for workspace
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // Create, Flywheel, Registrate
    implementation fg.deobf("com.simibubi.create:create-${mc_version}:${create_version}-${create_end_numbers}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${mc_version}:${flywheel_version}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")

    // Create Crafts and Additions
    if (createaddition_enabled.toLowerCase() == "true") {
        implementation fg.deobf("curse.maven:createaddition-439890:${createaddition_version}")
    }
    // Mantle and TConstruct
    implementation fg.deobf("slimeknights.mantle:Mantle:${mc_version}-${mantle_version}")
    implementation fg.deobf("slimeknights.tconstruct:TConstruct:${mc_version}-${tinkers_version}")

    // JEI
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))


    // mixin thing
    annotationProcessor "org.spongepowered:mixin:0.8.3:processor"
    testAnnotationProcessor "org.spongepowered:mixin:0.8.3:processor"

    // a TConstruct library
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "econstruct",
                "Specification-Vendor"    : "econstructsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "econstructsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
